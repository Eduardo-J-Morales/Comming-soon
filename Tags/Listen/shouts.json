{
  "data":[
    {"title":"@onAnycreate",
    "concept":"A shout that is sent to all bots when a bot is created. Sent immediately after @onCreate is sent."},
  
    {"title":"@onAnyBotClicked",
    "concept":"A shout that is sent to all bots when a bot is clicked."},
    
    {"title":"@onAnyBotPointerEnter",
    "concept":"A shout that is sent to all bots when the mouse cursor starts to hover over a bot."},
    
    {"title":"@onAnyBotPointerExit",
    "concept":"A shout that is sent to all bots when the mouse cursor stops hovering over a bot."},
    
    {"title":"@onAnyBotPointerDown",
    "concept":"A shout that is sent to all bots when the user starts clicking a bot."},
    
    {"title":"@onAnyBotPointerUp",
    "concept":"A shout that is sent to all bots when the user stops clicking a bot."},
    
    {"title":"@onChat",
    "concept":"A shout that is sent to all bots when the player sends a chat message. Chat messages can be sent when the player presses the Enter key while writing a message or by clicking/tapping the 'Send Message' button to the right of the chat bar."},
    
    {"title":"@onChatTyping",
    "concept":"A shout that is sent to all bots when the player changes the text in the chat bar. Only triggered when the chat bar is visible."},
    
    {"title":"@onFileUpload",
    "concept":"A shout that is sent to all bots when the user drags a file into the window."},
    
    {"title":"@onGridClick",
    "concept":"A shout that is sent to all bots when the user clicks on empty space."},
    
    {"title":"@onGridDown",
    "concept":"A shout that is sent to all bots when the user starts clicking on empty space."},
    
    {"title":"@onGridUp",
    "concept":"A shout that is sent to all bots when the user stops clicking on empty space."},
    
    {"title":"@onPortalChanged",
    "concept":"A shout that is sent to all bots when a portal changes on the config bot."},
    
    {"title":"@onBarcodeScanned",
    "concept":"A shout that is sent to all bots when the player scans a barcode."},
    
    {"title":"@onBarcodeScannerOpened",
    "concept":"A shout that is sent to all bots when the barcode scanner is opened."},
    
    {"title":"@onBarcodeScannerClosed",
    "concept":"A shout that is sent to all bots when the barcode scanner is closed."},
    
    {"title":"@onQRCodeScanned",
    "concept":"A shout that is sent to all bots when a QR Code is scanned."},
    
    {"title":"@onQRCodeScannerOpened",
    "concept":"A shout that is sent to all bots when the QR Code Scanner is opened."},
    
    {"title":"@onQRCodeScannerClosed",
    "concept":"A shout that is sent to all bots when the QR Code Scanner is closed."},
    
    {"title":"@onImageClassified",
    "concept":"A shout that is sent to all bots when an image has been classified."},
    
    {"title":"@onImageClassifierOpened",
    "concept":"A shout that is sent to all bots when the image classifier is opened."},
    
    {"title":"@onImageClassifierClosed",
    "concept":"A shout that is sent to all bots when the image classfier is closed."},
    
    {"title":"@onPhotoCaptured",
    "concept":"A shout that is sent to all bots when a picture has been captured from the photo camera."},
    
    {"title":"@onPhotoCameraOpened",
    "concept":"A shout that is sent to all bots when the photo camera is opened."},
    
    {"title":"@onPhotoCameraClosed",
    "concept":"A shout that is sent to all bots when the photo camera is closed."},
    
    {"title":"@onTapCode",
    "concept":"A shout that is sent to all bots whenever a 4-digit tap code is entered."},
    
    {"title":"@onKeyDown",
    "concept":"A shout that is sent to all bots whenever the user starts pressing a key."},
    
    {"title":"@onKeyUp",
    "concept":"A shout that is sent to all bots whenever the user stops pressing a key."},
    
    {"title":"@onKeyRepeat",
    "concept":"A shout that is sent to all bots whenever the user holds down a key and it automatically fires 'repeated key event'. (This is like when you hold down the 'a' key and then the computer starts continually typing 'a' characters until you stop holding the key"},
    
    {"title":"@onInstJoined",
    "concept":"A shout that is sent when a inst is loaded. An inst is considered loaded once all the bots in each space have been added (See #onBotAdded). Sent to every inst that is loaded."},
    
    {"title":"@onInstLeave",
    "concept":"A shout that is sent when a inst is unloaded. Sent to every inst that is loaded."},
    
    {"title":"@onInstStreaming",
    "concept":"A shout that is sent when a inst is connected and fully synced. Note that this can occur multiple times throughout the lifetime of a session because the player can lose and reegain its connection to the inst. Sent to every inst that is loaded."},
    
    {"title":"@onInstStreamLost",
    "concept":"A shout that is sent when a inst has been temporarily disconnected from the server. Note that this can occur multiple times trhoughout the lifetime of a session because the player can lose and regain its connection to the inst Sent to every inst that is loaded."},
    
    {"title":"@onCheckout",
    "concept":"A shout that is sent when the user submits their credit card info to purchase something."},
    
    {"title":"@onPaste",
    "concept":"A shout that is sent when some text is pasted into the server. This happens by pressing Ctrl+v or Cmd+V while something is in your clipboard."},
    
    {"title":"@onPaymentSuccessful",
    "concept":"A shout that is sent when payment has been approved for a checkout."},
    
    {"title":"@onPaymentFailed",
    "concept":"A shout that is sent when payment has been rejected for a checkout."},
    
    {"title":"@onAnyBotDrag",
    "concept":"A shout that is sent whenever a bot starts to be dragged."},
    
    {"title":"@onAnyBotDragging",
    "concept":"A shout that is sent whenever a bot would be moved while dragging. Note that this whisper is only sent for drag operations that have called os.enableCustomDraggin()."},
    
    {"title":"@onAnyBotDrop",
    "concept":"A shout that is sent whenever a bot is dropped after being dragged."},
    
    {"title":"@onAnyBotDropEnter",
    "concept":"A shout that is sent whenever a bot is dragged onto another bot."},
    
    {"title":"@onAnyBotDropExit",
    "concept":"A shout that is sent whenever a bot is dragged off of another bot."},
    
    {"title":"@onAnyListen",
    "concept":"A shout that is sent whenever a whisper or shout is issued."},
    
    {"title":"@onAnyMaxLODEnter",
    "concept":"A shout that is sent whenever a bot enters its maximum Level-Of-Detail. Only sent for bots that have one of @onMaxLODEnter, @onMaxLODExit, @onMinLODEnter, @onMinLODExit, #maxLODThreshold or #minLODThreshold specified."},
    
    {"title":"@onAnyMinLODEnter",
    "concept":"A shout that is sent whenever a bot enter its minimum Level-Of-Detail. Only sent for bots that have one of @onMaxLODEnter, @onMaxLODExit, @onMinLODEnter, @onMinLODExit, #maxLODThreshold or #minLODThreshold specified."},
    
    {"title":"@onAnyMaxLODExit",
    "concept":"A shout that is sent whenever a bot exits its maximum Level-Of-Detail. Only sent for bots that have one of @onMaxLODEnter, @onMaxLODExit, @onMinLODEnter, @onMinLODExit, #maxLODThreshold or #minLODThreshold specified."},
    
    {"title":"@onAnyMinLODExit",
    "concept":"A shout that is sent whenever a bot exits its minimum Level-Of-Detail. Only sent for bots that have one of @onMaxLODEnter, @onMaxLODExit, @onMinLODEnter, @onMinLODExit, #maxLODThreshold, or #miinLODThreshold specified."},
    
    {"title":"@onAnyFocusEnter",
    "concept":"A shout that is sent whenever a bot starts being focused by the player. Focus is when the bot is in the center of the screen. Only sent if #focusable is true."},
    
    {"title":"@onAnyFocusExit",
    "concept":"A shout that is sent whenever a bot stops being focused by the player. Focus is when the bot is in the center of the screen."},
    
    {"title":"@onBeginAudioRecording",
    "concept":"A shout that is sent whenever audio recording starts. There are no arguments with this listener."},
    
    {"title":"@onAudioChunk",
    "concept":"A shout that is sent whenever a piece of audio is prepared for streaming. Only called when os.beginAudioRecording(options?) is called with stream set to true."},
    
    {"title":"@onEndAudioRecording",
    "concept":"A shout that is sent whenever audio recording stops. If the data was streamed, that is null. Otherwise, that is a Blob object that contains the recorded data."},
    
    {"title":"@onEnterAR",
    "concept":"A shout that is sent whenever the device enters augmented reality mode. You can enter AR by calling os.enableAR(options?). There are no arguments with this listener."},
    
    {"title":"@onExitAR",
    "concept":"A shout that is sent whenever the device exits augmented reality mode. You can exit AR by calling os.disableAR(). There are no arguments with this listener."},
    
    {"title":"@onEnterVR",
    "concept":"A shout that is sent whenever the device enters virtual reality mode. You can exit VR by calling os.enterVR(options?). There are no arguments with this listener."},
    
    {"title":"@onExitVR",
    "concept":"A shout that is sent whenever the device exits virtual reality mode. You can exit VR by calling os.disableVR(). There are no arguments with this listener."},
    
    {"title":"@onWebhook",
    "concept":"A shout that is sent whenever a webhook is received. If data is returned, the first result will be used as the HTTP response. The headers property is an object that specifies the HTTP headers that should be set on the response. Each property is a header name and the value is the value set on the header. The status property is the numerical status code that should be set on the response. If omitted, then status code 200 will be used. The data property is the data that should be included in the response body."},
    
    {"title":"@onAnyAction",
    "concept":"A shout that is sent whenever an action happens."},
    
    {"title":"@onSerialData",
    "concept":"A shout that is sent whenever a stream data is received."},
    
    {"title":"@onSheetTagClick",
    "concept":"A shout that is sent when a tag name is clicked in the sheet portal."},
    
    {"title":"@onSheetBotClick",
    "concept":"A shout that is sent when a Bot is clicked in the sheet portal."},
    
    {"title":"@onSheetBotIDClick",
    "concept":"A shout that is sent when a Bot ID is clicked in the sheet portal."},
    
    {"title":"@onMeetLoaded",
    "concept":"A shout that is sent when the meet portal finishes loading. Note that when this shout is sent, the user may not actually be in the meeting. They simply be in the meeting waiting area and not actually in the meeting. If you want notification when the user has become a participant in a meeting, use @onMeetEntered. It is safe to run os.meetCommand() after this shout has been received."},
    
    {"title":"@onMeetLeave",
    "concept":"A shout that is sent when the meet portal is closed."},
    
    {"title":"@onMeetEntered",
    "concept":"A shout"},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
    
    {"title":"",
    "concept":""},
  ]
}
