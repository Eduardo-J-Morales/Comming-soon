{
  "data":[
    {"title":"@onCreate",
      "concept":"A whisper that is sent to a bot when it is first created"},

    {"title":"@onDestroy",
      "concept":"A whisper that is sent to a bot when it is being destroyed."},

    {"title":"@onModDrop",
      "concept":"A whisper that is sent to a bot that a mode was dropped on. If a custom @onModDrop is not specified, then the mod will be applied automatically. If a custom @onModDrop is specified, then the mod needs to be applied manually via applyMod(bot, ...mods)."},

    {"title":"@onModDropEnter",
      "concept":"A whisper that is sent to the bot that a mod started to be dragged onto."},

    {"title":"@onModDropExit",
      "concept":"A whisper that is sent to the bot that a mod was just dragged off of."},

    {"title":"@onClick",
      "concept":"A whisper that is sent to the bot that was clicked."},

    {"title":"@onKeyClick",
      "concept":"A whisper that is sent to the bot when a key is clicked on it. This event will only be available for bots that have their #form set to keyboard."},
    
    {"title":"@onPointerEnter",
      "concept":"A whisper that is sent to a bot when the mouse cursor starts to hover over it."},

    {"title":"@onPointerExit",
      "concept":"A whisper that is sent to a bot when the mouse cursor stops hovering over it."},

    {"title":"@onPointerDown",
      "concept":"A whisper that is sent to a bot when the user starts clicking it."},

    {"title":"@onPointerUp",
      "concept":"A whisper that is sent to a bot when the user stops clicking it."},

    {"title":"@onDrag",
      "concept":"A whisper that is sent whenever a bot is starting to be dragged."},

    {"title":"@onDragging",
      "concept":"A whisper that is sent whenever a bot would be moved while dragging. Note that this whisper is only sent for drag operations that have called os.enableCustomDragging()."},

    {"title":"@onDrop",
      "concept":"A whisper that is sent whenever a bot has been dropped after being dragged. The whisper is sent to both the bot that was dropped and the bot that was dropped on."},

    {"title":"@onDropEnter",
      "concept":"A whisper that is sent to both bots when a bot is dragged onto another bot."},

    {"title":"@onDropExit",
      "concept":"A whisper that is sent to both bots when a bot is dragged off of another bot."},

    {"title":"@onSaveInput",
      "concept":"A whisper that is sent when the input box for a bot has been changed by the user."},

    {"title":"@onCloseInput",
      "concept":"A whisper that is sent when the input box for a bot has been closed by the user."},

    {"title":"@onListen",
      "concept":"A whisper that is sent whenever this bot receives a whisper or shout."},

    {"title":"@onMaxLODEnter",
      "concept":"A whisper that is sent whenever a bot enters its maximum Level-Of-Detail."},

    {"title":"@onMinLODEnter",
      "concept":"A whisper that is sent whenever a bot enters its minimum Level-Of-Detail."},

    {"title":"@onMaxLODExit",
      "concept":"A whisper that is sent whenever a bot exits its maximum Level-Of-Detail."},

    {"title":"@onMinLODExit",
      "concept":"A whisper that is sent whenever a bot exits its minimum Level-Of-Detail."},

    {"title":"@onFocusEnter",
      "concept":"A whisper that is sent whenever a bot starts being focused by the player. Focus is when the bot is in the center of the screen. Only sent if #focusable is true."},

    {"title":"@onFocusExit",
      "concept":"A whisper that is sent whenever a bot stops being focused by the player. Focus is when the bot is in the center of the screen."},

    {"title":"@onInputTyping",
      "concept":"A whisper that is sent whenever the palyer is typing in the menu bot's input box. Only sent for bots that are in a menu and have #form set to input."},

    {"title":"@onSubmit",
      "concept":"A whisper that is sent whenever the player submits the text in the menu bot's input box. This can happen by pressing enter while there is text in the box or by cliking the send button on the right side of the box. Only sent for bots that are in a menu and have #form set to input."},

    {"title":"@onSetupApp",
      "concept":"A whisper that is sent a custom app has been setup. called when os.registerApp(appId, bot) has completed its work."},

    {"title":"@onBotAdded",
      "concept":"A whisper that is sent when the bot is added to the local inst. Unlike @onCreate, this listen tag is triggered whenever the bot has been added to the current device's ints, even if the bot has already been created. An example of this happening is when you first load an inst. Even though all the bots have already been created, they still need to be added to the inst in order for you to interact with them. Note that this listen tag is triggered after executing scripts have finished running. This means that if a script creates multiple bots, @onBotAdded will be triggered after all the bots have been created. This is in contrast to @onCreate which is triggered immediately after the bot has been created. Also note that this listen tag can be triggered before @onInstJoined. This means that it is possible for bots in other spaces to not be available when this listener is triggered. There is no 'that' argument for this listen tag."},

    {"title":"@onBotChanged",
      "concept":"A whisper that is sent when a tag on the bot is updated. This listen tag is triggered whenever the bot has been updated in the current device's inst, even if the bot was not updated locally. An example of this happening is when another player changes a tag in the sheet portal. Even though the change was made on their device, it will show up on the current device. Note that this listen tag is triggered after executing scripts have finished running This means that if a script updates the same tag multiple times, @onBotChanged will still only be triggered once. This is in contrast to @onCreate which is triggered immediately after the bot has been created. Also note that this listen tag can be triggered before @onInstJoined. This means that it is possible for bots in other spaces to not be available when this listener is triggered."},

    {"title":"@[groupName][stateName]OnEnter",
      "concept":"A whisper that is sent wheneverthe [groupName] tag is set to [stateName] via the changeState(bot, stateName, groupName?) function."},

    {"title":"@[groupName][stateName]OnExit",
      "concept":"A whisper that is sent whenever the [groupName] tag is change from [stateName] via the changestate(bot, stateName, groupName?) function."},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""},

    {"title":"",
      "concept":""}
  ];
}
